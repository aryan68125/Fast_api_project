-- STORED PROCEDURES AND FUNCTIONS --

-- INSERT DATA INTO TABLE --
CREATE OR REPLACE FUNCTION insert_product(p_name VARCHAR, p_price NUMERIC)
RETURNS VOID AS $$
BEGIN
    INSERT INTO product (name, price) VALUES (p_name, p_price);
END;
$$ LANGUAGE plpgsql;
-- usage --
SELECT insert_product('LED ambient lights', 150);


-- READ ALL ENTRIES IN THE TABLE WHOSE HAS IS_DELETED SET TO FALSE --
CREATE OR REPLACE FUNCTION read_all_products()
RETURNS TABLE(id INT, name VARCHAR, price NUMERIC, is_deleted BOOLEAN) AS $$
BEGIN
    RETURN QUERY 
    SELECT p.id, p.name, p.price, p.is_deleted
    FROM product p
    WHERE p.is_deleted = FALSE;
END;
$$ LANGUAGE plpgsql;
-- usage --
SELECT * FROM read_all_products();


-- READ ONE ENTRY USING ID IN THE TABLE --
CREATE OR REPLACE FUNCTION read_one_product(p_id INT)
RETURNS TABLE (id INT, name VARCHAR, price NUMERIC, is_deleted BOOLEAN) AS $$
BEGIN
	RETURN QUERY
	SELECT p.id, p.name, p.price, p.is_deleted
    FROM product p
    WHERE p.is_deleted = FALSE AND p.id = p_id;
END;
$$ LANGUAGE plpgsql;
-- usage --
SELECT * FROM read_one_product(10);

-- UPDATE AN ENTRY IN A TABLE --
CREATE OR REPLACE FUNCTION update_product(p_id INT, p_name VARCHAR, p_price NUMERIC)
RETURNS VOID AS $$
BEGIN
    UPDATE product
    SET name = p_name, price = p_price
    WHERE id = p_id AND is_deleted = FALSE;
END;
$$ LANGUAGE plpgsql;
-- usage -- 
SELECT update_product(8, 'Gaming Laptop', 99600); 

-- SOFT DELETE AN ENTRY FROM A DATABASE TABLE --
CREATE OR REPLACE FUNCTION delete_product(p_id INT)
RETURNS VOID AS $$
BEGIN
    UPDATE product
    SET is_deleted = TRUE
    WHERE id = p_id AND is_deleted = FALSE;
END;
$$ LANGUAGE plpgsql;
-- usage --
SELECT delete_product (13)

-- RESTORE AN ENTRY IN A DATABASE TABLE THAT HAS BEEN SOFT DELETED --
CREATE OR REPLACE FUNCTION restore_product(p_id INT)
RETURNS VOID AS $$
BEGIN
	UPDATE product
	SET is_deleted = False
	WHERE id = p_id AND is_deleted = True;
END;
$$ LANGUAGE plpgsql
-- usage --
SELECT restore_product (13)

-- HARD DELETE AN ENTRY IN A DATABASE TABLE --
CREATE OR REPLACE FUNCTION hard_delete(p_id INT)
RETURNS VOID AS $$
BEGIN
	DELETE FROM product
	WHERE id = p_id;
END;
$$ LANGUAGE plpgsql
-- usage --
SELECT hard_delete(13)