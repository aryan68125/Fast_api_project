-- STORED PROCEDURES --

-- INSERT DATA INTO A TABLE STORED PROCEDURE --
CREATE OR REPLACE PROCEDURE insert_product_sp(p_name VARCHAR, p_price NUMERIC, inventory INTEGER)
LANGUAGE plpgsql AS $$
BEGIN
    -- Try to insert the product
    INSERT INTO product (name, price, inventory) VALUES (p_name, p_price, inventory);
    
    -- Return success message
    RAISE NOTICE 'success';
EXCEPTION
    WHEN OTHERS THEN
        -- Catch any error and return failure message
        RAISE NOTICE '"%"', SQLERRM;
END;
$$;
-- usage --
CALL insert_product_sp('Exhaust fan', 3000, 44);
SELECT * FROM product ORDER BY id ASC;
-- DELETE FROM product WHERE id =  26;



-- UPDATE DATA INTO A TABLE STORED PROCEDURE --
CREATE OR REPLACE PROCEDURE update_product_sp(p_id INTEGER,p_name VARCHAR, p_price NUMERIC, p_inventory INTEGER, p_is_on_sale BOOLEAN)
LANGUAGE plpgsql AS $$
BEGIN
	UPDATE product SET name = p_name, price = p_price, inventory=p_inventory, is_on_sale=p_is_on_sale
	WHERE id = p_id AND is_deleted = False;
	IF FOUND THEN
		RAISE NOTICE 'success';
	ELSE
		RAISE NOTICE 'not found';
	END IF ;
EXCEPTION 
	WHEN OTHERS THEN 
		RAISE NOTICE '"%"', SQLERRM;
END;
$$;
-- usage --
CALL update_product_sp(22, 'Hair Drier', 750,250,True)
SELECT * FROM product ORDER BY id ASC;


-- SOFT DELETE DATA FROM A TABLE STORED PROCEDURE --
CREATE OR REPLACE PROCEDURE soft_delete_product_sp(p_id INTEGER)
LANGUAGE plpgsql AS $$
BEGIN
	UPDATE product SET is_deleted = TRUE
	WHERE id = p_id AND is_deleted = False;
	IF FOUND THEN 
		RAISE NOTICE 'success';
	ELSE
		RAISE NOTICE 'not found';
	END IF ;
EXCEPTION 
	WHEN OTHERS THEN 
		RAISE NOTICE '"%"', SQLERRM;
END;
$$;
-- usage --
CALL soft_delete_product_sp(27);
SELECT * FROM product ORDER BY id ASC;

-- RESTORE SOFT DELETED DATA IN A TABLE STORED PROCEDURE --
CREATE OR REPLACE PROCEDURE retore_data_product_sp(p_id INTEGER)
LANGUAGE plpgsql AS $$
BEGIN
	UPDATE product SET is_deleted = False
	WHERE id = p_id AND is_deleted = True;
	IF FOUND THEN
		RAISE NOTICE 'success';
	ELSE 
		RAISE NOTICE 'not found';
	END IF;
EXCEPTION 
	 WHEN OTHERS THEN
	 	RAISE NOTICE '"%"', SQLERRM;
END;
$$;
-- usage --
CALL retore_data_product_sp(27);
SELECT * FROM product ORDER BY id ASC;